service: backend
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  role: arn:aws:iam::587818610762:role/LabRole
  httpApi:
    cors: true

functions:
  createStory:
    handler: api/create.story
    environment:
      STORY_TABLE_NAME: !Ref storyTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - http:
          method: post
          path: storyList
          cors: true

  signup:
    handler: api/signup.signup
    environment:
      CREDENTIALS_TABLE_NAME: !Ref credentialsTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - http:
          method: post
          path: signup
          cors: true

  login:
    handler: api/login.login
    environment:
      CREDENTIALS_TABLE_NAME: !Ref credentialsTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - http:
          method: post
          path: login
          cors: true

  editStory:
    handler: api/editStory.editStory
    environment:
      STORY_EDITS_TABLE_NAME: !Ref storyEdits
      STORY_TABLE_NAME: !Ref storyTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - http:
          method: post
          path: editStory
          cors: true

  getAllStories:
    handler: api/getAllStories.getAllStories
    environment:
      STORY_TABLE_NAME: !Ref storyTable
      STORY_EDITS_TABLE_NAME: !Ref storyEdits
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    events:
      - http:
          method: get
          path: storyList/getallstories
          cors: true

  sendMessageToQueue:
    handler: api/sendMessageToQueue.sendMessageToQueue
    events:
      - http:
          method: post
          path: sendMessageToQueue
          cors: true

resources:
  Resources:
    storyTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: storyTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: story_id
            AttributeType: S
        KeySchema:
          - AttributeName: story_id
            KeyType: HASH

    credentialsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: credentialsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH

    storyEdits:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: storyEdits
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: editId
            AttributeType: S
        KeySchema:
          - AttributeName: editId
            KeyType: HASH

    mySQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: EditsQueue